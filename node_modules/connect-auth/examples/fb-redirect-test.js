var  connect = require('connect')
   , auth= require('../lib/index')
   , url= require('url');

var fbId= "d2bcddc87ca1475c44a2a8accd6fe6e4";
var fbSecret= "f53a25cf96e19743fdcd189307bf47ac";
var fbCallbackAddress= "http://www.ciaranj.me/auth/facebook_callback"


var authenticatedRoutes= {
      "/login": {authenticate: true }
    , "/secret": {authenticate: false }
};

var specialPaths = {
    loginFailure: "/loginFailed"
  , accessDenied: "/accessDenied"
  , secret: "/secret"
  , login: "/login"
  , logout: "/logout"
};

function redirect(req, res, location) {
  res.writeHead(303, { 'Location': location });
  res.end('');
}

// To demonstrate a middleware-type approach, provide an example one
var example_auth_middleware= function() {
  return function(req, res, next) {
    var urlp= url.parse(req.url, true)
    var path= urlp.pathname;
    if( path ==   specialPaths.logout ) {
      req.logout();
      next();
    }
    else {
      if( authenticatedRoutes[path] ) {
        if( authenticatedRoutes[path].authenticate && authenticatedRoutes[path].authenticate === true ) {
          req.authenticate(['facebook'], function(error, authenticated){
            if( authenticated === true ) {
              next();
            }
            else if( authenticated === false ) {
              redirect( req, res, specialPaths.loginFailure );
            }
          })
        } else {
          if( req.isAuthenticated() ) {
            next();
          } else {
            redirect( req, res, specialPaths.accessDenied );
          }
        }
      } else {
        next();
      }
    }
  }
};

// Define our pages
// a 'Home page' 
// a 'Failed login page'
// a 'Logout page'
// a 'Secrets page' (requires authentication (but won't attempt to authenticate) )
function routes(app) {
  app.get(specialPaths.secret, function(req, res, params) {
    res.writeHead(200, {'Content-Type': 'text/html'})
    res.end("HERE BE UNICORNS... Special Secret unicorns.")
  });
  app.get(specialPaths.accessDenied, function(req, res, params) {
    res.writeHead(403, {'Content-Type': 'text/html'})
    res.end("Oh-No-You-Didn't! You are not authenticated, be-gone.")
  });
  app.get(specialPaths.login, function(req, res, params) {
    redirect( req, res, "/" );
  }); 
  app.get(specialPaths.loginFailure, function(req, res, params) {
    res.end("<html><body>Facebook no like you :( Please <a href='/login'>Try again!</a> </body></html>")
  }); 

  app.get(/.*/, function(req, res, params) {
    res.writeHead(200, {'Content-Type': 'text/html'})
    if( req.isAuthenticated() ) {
      res.end("<html><body>Congratulations, you have logged on, like a good-un! <a href='/logout'>Logout</a><br /> <a href='/secret'>Shhh! Secrets</a></body></html>")
    }
    else {
      res.end("<html><body>Please <a href='/login'>Login</a> <br /> <a href='/secret'>Shhh! Secrets</a></body></html>")
    }
  })
}

var server= connect.createServer(connect.cookieParser()
                               , connect.session({secret: 'FlurbleGurgleBurgle', store: new connect.session.MemoryStore({ reapInterval: -1 }) })
                               , auth( auth.Facebook({appId : fbId, appSecret: fbSecret, scope: "email", callback: fbCallbackAddress}) )
                               , example_auth_middleware()
                               , connect.router(routes));
server.listen(80);